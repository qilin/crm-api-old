// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package casbin

import (
	"github.com/ProtocolONE/go-core/v2/pkg/config"
	"github.com/ProtocolONE/go-core/v2/pkg/invoker"
	"github.com/casbin/casbin"
)

// Injectors from injector.go:

func Build(initial config.Initial, observer invoker.Observer) (*casbin.Enforcer, func(), error) {
	configurator, cleanup, err := config.Provider(initial, observer)
	if err != nil {
		return nil, nil, err
	}
	casbinConfig, cleanup2, err := ProviderCfg(configurator)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	enforcer, cleanup3, err := Provider(casbinConfig)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return enforcer, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

func BuildTest(observer invoker.Observer, model Model, policy Policy) (*casbin.Enforcer, func(), error) {
	enforcer, cleanup, err := ProviderTest(model, policy)
	if err != nil {
		return nil, nil, err
	}
	return enforcer, func() {
		cleanup()
	}, nil
}
