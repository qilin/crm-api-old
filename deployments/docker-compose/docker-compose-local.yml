version: '3.7'
services:
  crm-migration:
    command: ["migrate","up","--dsn","postgres://postgres:postgres@postgres:5432/qilin-hasura?sslmode=disable"]
  crm-daemon:
    container_name: qilin-crm-daemon
    image: p1hub/qilin-crm-api:${TAG}
    restart: always
    depends_on:
      - crm-migration
    ports:
      - 8082:8080
    command: ["daemon","-c","configs/local.yaml","-b",":8080","-d"]
    environment:
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/qilin-hasura?sslmode=disable
    networks:
      - default
  crm-sdk:
    container_name: qilin-crm-sdk
    image: p1hub/qilin-crm-api:${TAG}
    restart: always
    depends_on:
      - crm-migration
    ports:
      - 8084:8080
    command: ["sdk","-c","configs/sdk.yaml","-b",":8080","-d"]
    environment:
      - APP_POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/qilin-hasura?sslmode=disable
    networks:
      - default
  crm-mailer:
    container_name: qilin-crm-mailer
    image: p1hub/qilin-crm-api:${TAG}
    restart: always
    depends_on:
      - natss
    command: ["mailer","-c","configs/mailer.yaml","-d"]
    networks:
      - default
  hasura:
    depends_on:
      - crm-daemon
    ports:
      - 8081:8080
    volumes:
      - ./../../assets/hasura/migrations:/hasura-migrations
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:postgres@postgres:5432/qilin-hasura?sslmode=disable"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_LOG_LEVEL: debug
      HASURA_GRAPHQL_ADMIN_SECRET: insecure
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      QILIN_CRM_ENDPOINT: "http://crm-daemon:8080/v1/graphql"
      QILIN_CRM_WEBHOOKS_ENDPOINT: "http://crm-daemon:8080/v1/webhooks"
      QILIN_CRM_WEBHOOKS_SECRET: "insecure"
      HASURA_GRAPHQL_AUTH_HOOK: "http://crm-daemon:8080/v1/auth/session"
  postgres:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5567:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  natss:
    ports:
      - "4223:4222"
    volumes:
      - natss:/datastore
    command: ["-store","sql","--sql_driver","postgres", "--sql_source","postgres://natss:insecure@postgres:5432/natss?sslmode=disable"]
volumes:
  postgres:
  natss: